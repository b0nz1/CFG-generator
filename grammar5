# a b
# Symbols in the grammar are case-sensitive.
# 
# This grammar uses a convention that
#    - terminals are lowercase          (president)
#    - preterminals are capitalized     (Noun)
#    - other nonterminals are all-caps  (NP)
# 
# This convention just makes grammars more readable to humans.  Thus:
#
#    - When *you* are writing grammars, you should 
#      follow this convention unless you have a good reason not to.  
#
#    - But the  *program* should still work with grammars that don't
#      follow this convention.  So how can the program reliably tell
#      the difference between terminal and nonterminal symbols?  If
#      there is at least one rule for rewriting a symbol, then that
#      symbol is a nonterminal and should be rewritten.
#######################

# Rules for creating full sentences.
# There are far more sentences that end with '.' than with '!' and there are even less that end with '?'
10	ROOT	S .
2	ROOT	S !
1	ROOT	is it true that S ?     # mixing terminals and nonterminals is ok.

# The basic grammar rules.  Here's what the abbreviations stand for:
#    S  = sentence
#    NP = noun phrase
#    VP = verb phrase
#    PP = prepositional phrase
#    Det = determiner (sometimes called "article")
#    Prep = preposition
#    Adj = adjective

1	S	NP VP
3	VP	Vt NP
1	NP	NP PP
1	PP	Prep NP

# Vocabulary.  Your program can see that "ate" is a terminal
# symbol because there exists no rule for rewriting it.
# Any symbol that can rewrite as a terminal (or a string of 
# terminals, like "chief of staff") is called a "preterminal."  Notice 
# that a preterminal is a special kind of nonterminal.

#ALL THE NUMBERS WERE TAKEN WITH CONSIDERATION OF STATISTICS IN e.mle
#WITH "SMOOTHING" BASED ON COMMON LOGIC AND TRIAL AND ERROR 
2	Vi	ate
2	Vi	sighed
2	Vi	kissed
2	Vi	worked

2	Vt	ate
2	Vt	wanted
2	Vt	kissed
2	Vt	understood
#'pickled' is not combined well with most of our nouns
0.5	Vt	pickled
2	Vt	perplexed

1	Vth	understood
1	Vth	thought

1	Ving	wanting
1	Ving	kissing
1	Vis	is

#'a' and 'the' are more frequent than 'every'
3	Det	the
1	Det	every

1	Noun	president
1	Noun	sandwich
1	Noun	pickle
1	Noun	chief of staff
1	Noun	floor
1	Noun	desk
1	Noun	proposal

1	Pn	Sally
1	Pn	it

1	Adj	fine
1	Adj	delicious
1	Adj	perplexed
#'pickled' is a less frequent adjective
0.5	Adj	pickled
1	Adj	lazy

1	Prep	with
1	Prep	on
1	Prep	under
1	Prep	in

1	Con	and
1	That	that
1	Adv	very
#new rules in order to meet the sentences
#Pn - Personal noun
#Con - Conjunction ('and', also can add 'or' if needed)
#Vi - intransitive verb
#Vt - transitive verb
#Vth - verbs that are followed by 'that'
#Ving - verb ending with 'ing'
#Adv - adverb
#Vs - the verb 'is'
#That - That

#Sally ate a sandwich .
10	NP	Pn

#Sally and the president wanted and ate a sandwich .
1	NP	NP Con NP
1	Vt	Vt Con Vt
1	Vi	Vi Con Vi	

#The president sighed
2	VP	Vi

#The president thought that a sandwich sighed .
1	VP	Vth That S

#it perplexed the president that a sandwich ate Sally .
1	VP	Vt NP That S

#the very very very perplexed president ate a sandwich .
#1	Adj	 Adv Adj	

#the president worked on every proposal on the desk .
1	PP	PP PP
2	VP	Vi PP
#Sally is lazy .
2	VP	Vis Adj
#Sally is eating a sandwich.
2	VP	Vis Ving NP
#the president thought that sally is a sandwich .
2	VP	Vis NP


#######Rules to distinguish between "a" and "an"
5	NP	Det Noun
5	NP	Deta Noun
5	NP	Detan Nounan

2	Deta	a
2	Detan	an

1	Noun	Adj	Noun
1	Noun	Adj	Nounan
1	Nounan	Adjan	Noun
1	Nounan	Adjan	Nounan

1	Adj	Adv Adj
1	Adj	Adv Adjan
1	Adjan	Advan Adj
1	Adjan	Advan Adjan

3	Adjan	amazing
3	Adjan	easy
3	Adjan	obvious
3	Adjan	ambivalent

3	Advan	awfully

1	Nounan	apple
1	Nounan	elephant

########Rules to create Yes/No Questions
2	ROOT	YNQ ?

1	YNQ	YNQuestion NP YNQVP

1	YNQuestion will
1	YNQuestion did

1	YNQVP	Vpresent
1	YNQVP	Vpresent PP NP

1	Vpresent	work
1	Vpresent	run
1	Vpresent	jump
1	Vpresent	eat
1	Vpresent	sigh
1	Vpresent	understand

########Part 5 - Direct speech
2	ROOT	" YNQ ? ", Qverb NP
2	ROOT	" S ! ", Sverb NP

# additional verbs can be added 
1	Qverb	asked
1	Sverb	said